#!/usr/bin/env python3
"""
Shadowsocks Key Generator
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–ª—é—á–µ–π –¥–ª—è Shadowsocks —Å–µ—Ä–≤–µ—Ä–∞
"""
import base64
import json
import os
import subprocess
import sys

def get_external_ip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP –∞–¥—Ä–µ—Å–∞"""
    try:
        result = subprocess.run(['curl', '-s', '-4', 'ifconfig.me'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0 and result.stdout.strip():
            return result.stdout.strip()
    except:
        pass
    
    try:
        result = subprocess.run(['curl', '-s', '-4', 'icanhazip.com'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0 and result.stdout.strip():
            return result.stdout.strip()
    except:
        pass
    
    return None

def generate_ss_key():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Shadowsocks –∫–ª—é—á–∞"""
    config_path = '/etc/shadowsocks-libev/config.json'
    
    print("üîë –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Shadowsocks –∫–ª—é—á–µ–π")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if os.path.exists(config_path):
        try:
            with open(config_path, 'r') as f:
                config = json.load(f)
            
            method = config.get('method', 'aes-256-gcm')
            password = config.get('password')
            server_port = config.get('server_port', 8388)
            
            print(f"üìã –ù–∞–π–¥–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
            print(f"   –ú–µ—Ç–æ–¥: {method}")
            print(f"   –ü–æ—Ä—Ç: {server_port}")
            print(f"   –ü–∞—Ä–æ–ª—å: {password}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            return False
    else:
        print("‚ö†Ô∏è  –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
        method = input("–ú–µ—Ç–æ–¥ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è [chacha20-ietf-poly1305]: ").strip() or "chacha20-ietf-poly1305"
        password = input("–ü–∞—Ä–æ–ª—å: ").strip()
        server_port_input = input("–ü–æ—Ä—Ç [8388]: ").strip() or "8388"
        try:
            server_port = int(server_port_input)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Ä—Ç–∞!")
            return False
    
    if not password:
        print("‚ùå –ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return False
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ IP
    print(f"\nüåê –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP –∞–¥—Ä–µ—Å–∞...")
    auto_ip = get_external_ip()
    
    if auto_ip:
        print(f"   –ù–∞–π–¥–µ–Ω IP: {auto_ip}")
        use_auto = input(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å {auto_ip}? [Y/n]: ").strip().lower()
        if use_auto in ['', 'y', 'yes', '–¥–∞']:
            server_ip = auto_ip
        else:
            server_ip = input("–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: ").strip()
    else:
        print("   –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP")
        server_ip = input("–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: ").strip()
    
    if not server_ip:
        print("‚ùå IP –∞–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return False
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SS URL
    auth_string = f"{method}:{password}"
    encoded_auth = base64.b64encode(auth_string.encode()).decode()
    ss_url = f"ss://{encoded_auth}@{server_ip}:{server_port}"
    
    print(f"\n" + "=" * 50)
    print(f"üîë –í–ê–® SHADOWSOCKS –ö–õ–Æ–ß:")
    print(f"=" * 50)
    print(f"{ss_url}")
    print(f"=" * 50)
    
    print(f"\nüì± –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞:")
    print(f"‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")
    print(f"‚îÇ –°–µ—Ä–≤–µ—Ä:  {server_ip:<30} ‚îÇ")
    print(f"‚îÇ –ü–æ—Ä—Ç:    {server_port:<30} ‚îÇ") 
    print(f"‚îÇ –ü–∞—Ä–æ–ª—å:  {password:<30} ‚îÇ")
    print(f"‚îÇ –ú–µ—Ç–æ–¥:   {method:<30} ‚îÇ")
    print(f"‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò")
    
    print(f"\nüí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
    print(f"üì± Android: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 'Shadowsocks' ‚Üí '+' ‚Üí –í—Å—Ç–∞–≤—å—Ç–µ ss:// —Å—Å—ã–ª–∫—É")
    print(f"üì± iOS: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 'Shadowrocket' ‚Üí '+' ‚Üí –í—Å—Ç–∞–≤—å—Ç–µ ss:// —Å—Å—ã–ª–∫—É")  
    print(f"üñ•Ô∏è  Windows: –°–∫–∞—á–∞–π—Ç–µ Shadowsocks-Windows ‚Üí –ò–º–ø–æ—Ä—Ç –ø–æ ss:// —Å—Å—ã–ª–∫–µ")
    print(f"üçé macOS: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ShadowsocksX-NG ‚Üí –ò–º–ø–æ—Ä—Ç –ø–æ ss:// —Å—Å—ã–ª–∫–µ")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏
    try:
        decoded = base64.b64decode(encoded_auth).decode()
        if decoded == auth_string:
            print(f"\n‚úÖ –ö–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞")
            return False
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    try:
        with open('shadowsocks_key.txt', 'w') as f:
            f.write(f"Shadowsocks Connection Info\n")
            f.write(f"==========================\n\n")
            f.write(f"SS URL: {ss_url}\n\n")
            f.write(f"Manual Settings:\n")
            f.write(f"Server: {server_ip}\n")
            f.write(f"Port: {server_port}\n")
            f.write(f"Password: {password}\n")
            f.write(f"Method: {method}\n")
        print(f"\nüíæ –ö–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: shadowsocks_key.txt")
    except:
        print(f"\n‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª")
    
    return True

if __name__ == "__main__":
    try:
        if generate_ss_key():
            print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á –≤ —Å–≤–æ–µ–º Shadowsocks –∫–ª–∏–µ–Ω—Ç–µ.")
        else:
            print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞.")
            sys.exit(1)
    except KeyboardInterrupt:
        print(f"\n\n‚èπÔ∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 